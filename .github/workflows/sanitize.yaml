name: sanitize

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  sanitized-build:
    # Using a blank name produces better output on
    # the web UI (e.g. "sanitize /  (address)") than
    # any other alternative we tried.
    name: " "
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        sanitizer: ["address", "undefined", "thread"]
    steps:
      - name: install ninja
        run: sudo apt install ninja-build
      - uses: actions/checkout@v2
      - name: cache-vcpkg
        id: cache-vcpkg
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/vcpkg
          key: |
            vcpkg-${{ runner.os }}-${{ github.job }}-${{ hashFiles(
                '/usr/local/share/vcpkg/**/vcpkg.json',
                '/usr/local/share/vcpkg/**/CONTROL',
                'vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-${{ github.job }}-${{ matrix.sanitizer }}-
            vcpkg-${{ runner.os }}-${{ github.job }}-
            vcpkg-${{ runner.os }}-
      - name: -fsanitize=${{matrix.sanitizer}} / configure
        # See https://github.com/grpc/grpc/pull/22325 for an explanation around the
        # -DGRPC_* flags.
        run: >
          cmake -S . -B ${{runner.workspace}}/build -GNinja
          -DCMAKE_CXX_COMPILER=clang++-10
          -DCMAKE_BUILD_TYPE=Debug
          -DCMAKE_CXX_FLAGS="-fsanitize=${{matrix.sanitizer}} -DGRPC_TSAN_SUPPRESSED -DGRPC_ASAN_SUPPRESSED"
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: -fsanitize=${{matrix.sanitizer}} / build
        run: cmake --build ${{runner.workspace}}/build
      - name: -fsanitize=${{matrix.sanitizer}} / test
        working-directory: ${{runner.workspace}}/build
        env:
          ASAN_OPTIONS: detect_leaks=1:color=always
          LSAN_OPTIONS: report_objects=1
          TSAN_OPTIONS: halt_on_error=1:second_deadlock_stack=1
          UBSAN_OPTIONS: halt_on_error=1:print_stacktrace=1
        run: ctest --output-on-failure --timeout=60s
