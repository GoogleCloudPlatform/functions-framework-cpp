name: images

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  images:
    name: images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup-buildx
        uses: docker/setup-buildx-action@v1

      - name: docker-cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-images-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}-images-

      - name: docker-build-runtime
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: gcf-cpp-runtime
          context: build_scripts
          file: build_scripts/Dockerfile
          target: gcf-cpp-runtime
          cache-from: type=local,src=/tmp/.buildx-cache/runtime
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache/runtime

      - name: docker-build-develop
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: gcf-cpp-develop
          context: build_scripts
          file: build_scripts/Dockerfile
          target: gcf-cpp-develop
          cache-from: type=local,src=/tmp/.buildx-cache/develop
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache/develop

      - name: create-test-image
        run: >
          docker build
          --tag gcf-cpp-test-hello-world
          --pull=false
          --build-arg=FUNCTION_SIGNATURE_TYPE=http
          --build-arg=TARGET_FUNCTION=google::cloud::functions_examples::HelloWorld
          -f build_scripts/build-application.Dockerfile
          google/cloud/functions/integration_tests/hello_world

      - name: run-test-container
        run: >
          ID=$(docker run --detach --network host gcf-cpp-test-hello-world --port 8080) &&
          curl http://localhost:8080/say/hello &&
          docker kill "${ID}"
