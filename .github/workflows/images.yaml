name: images

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  images:
    name: images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup-buildx
        uses: docker/setup-buildx-action@v1

      - name: docker-cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-images-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}-images-

      - name: docker-build-runtime
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: gcf-cpp-runtime
          context: build_scripts
          file: build_scripts/Dockerfile
          target: gcf-cpp-runtime
          cache-from: type=local,src=/tmp/.buildx-cache/runtime
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache/runtime

      - name: docker-build-develop
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: gcf-cpp-develop
          context: build_scripts
          file: build_scripts/Dockerfile
          target: gcf-cpp-develop
          cache-from: type=local,src=/tmp/.buildx-cache/develop
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache/develop

      - name: build-examples-hello-world
        run: >
          docker build
          --tag gcf-cpp-examples-hello-world
          --pull=false
          --build-arg=FUNCTION_SIGNATURE_TYPE=http
          --build-arg=TARGET_FUNCTION=HelloWorld
          -f build_scripts/build-application.Dockerfile
          examples/hello_world

      - name: test-examples-hello-world
        run: >
          ID=$(docker run --detach --network host gcf-cpp-examples-hello-world --port 8080) &&
          curl -sS http://localhost:8080/say/hello &&
          docker kill "${ID}"

      - name: build-examples-hello-world-rooted
        run: >
          docker build
          --tag gcf-cpp-examples-hello-world-rooted
          --pull=false
          --build-arg=FUNCTION_SIGNATURE_TYPE=http
          --build-arg=TARGET_FUNCTION=::HelloWorld
          -f build_scripts/build-application.Dockerfile
          examples/hello_world

      - name: build-examples-hello-from-namespace
        run: >
          docker build
          --pull=false
          --build-arg=FUNCTION_SIGNATURE_TYPE=http
          --build-arg=TARGET_FUNCTION=hello_from_namespace::HelloWorld
          -f build_scripts/build-application.Dockerfile
          examples/hello_from_namespace

      - name: build-examples-hello-from-namespace-rooted
        run: >
          docker build
          --pull=false
          --build-arg=FUNCTION_SIGNATURE_TYPE=http
          --build-arg=TARGET_FUNCTION=::hello_from_namespace::HelloWorld
          -f build_scripts/build-application.Dockerfile
          examples/hello_from_namespace

      - name: build-examples-hello-from-nested-namespace
        run: >
          docker build
          --pull=false
          --build-arg=FUNCTION_SIGNATURE_TYPE=http
          --build-arg=TARGET_FUNCTION=hello_from_nested_namespace::ns0::ns1::HelloWorld
          -f build_scripts/build-application.Dockerfile
          examples/hello_from_nested_namespace
