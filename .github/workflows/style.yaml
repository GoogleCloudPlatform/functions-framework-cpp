name: C++ Lint CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  vcpkg_SHA: "5214a247018b3bf2d793cea188ea2f2c150daddd"

jobs:
  clang-tidy:
    name: clang-tidy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: clone-vcpkg
        run: >
          git clone --quiet --shallow-since 2021-02-01 \
           https://github.com/microsoft/vcpkg.git "${{runner.temp}}/vcpkg" && \
          git -C "${{runner.temp}}/vcpkg" checkout "${{env.vcpkg_SHA}}"
      - name: cache-vcpkg
        id: cache-vcpkg
        uses: actions/cache@v2
        with:
          # Preserve the vcpkg binary *and* the vcpkg binary cache in the build cache
          path: |
            ~/.cache/vcpkg
            ~/.cache/bin
          key: |
            vcpkg-${{ env.vcpkg_SHA }}-${{ runner.os }}-${{ github.job }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ env.vcpkg_SHA }}-${{ runner.os }}-${{ github.job }}-
            vcpkg-${{ env.vcpkg_SHA }}-${{ runner.os }}-
      - name: boostrap-vcpkg
        working-directory: "${{runner.temp}}/vcpkg"
        run: |
          if [[ -x "${HOME}/.cache/bin/vcpkg" ]]; then
          cp "${HOME}/.cache/bin/vcpkg" .
          else
          ./bootstrap-vcpkg.sh -useSystemBinaries
          mkdir -p "${HOME}/.cache/bin"
          cp ./vcpkg "${HOME}/.cache/bin/vcpkg"
          fi
          sha256sum "${{runner.temp}}/vcpkg/vcpkg" || true
          sha256sum "$HOME/.cache/bin/vcpkg" || true
      - name: configure
        run: >
          cmake -S . -B "${{runner.temp}}/build"
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          -DCMAKE_TOOLCHAIN_FILE="${{runner.temp}}/vcpkg/scripts/buildsystems/vcpkg.cmake"
      - name: install clang-tidy
        run: sudo apt install clang-tidy-10
      - name: tidy
        run: >
          git ls-files -z |
          grep -zE '\.cc$' |
          xargs --verbose -P 2 -n 1 -0 clang-tidy-10 -p="${{runner.temp}}/build"

  clang-format:
    name: clang-format
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: clang-format
        run: git ls-files -z | grep -zE '\.(cc|h)$' | xargs -P 2 -n 50 -0 clang-format-10 -i
      - name: check-diff
        run: git diff --ignore-submodules=all --color --exit-code .

  cmake-format:
    name: cmake-format
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: install cmake-format
        run: pip install cmakelang==0.6.13
      - name: cmake-format
        run: >
          git ls-files -z | grep -zE '((^|/)CMakeLists\.txt|\.cmake)$' |
          xargs -P 2 -n 1 -0 /home/runner/.local/bin/cmake-format -i
      - name: check-diff
        run: git diff --ignore-submodules=all --color --exit-code .
