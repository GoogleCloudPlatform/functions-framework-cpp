name: style

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  clang-tidy:
    name: clang-tidy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: cache-vcpkg
        id: cache-vcpkg
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/vcpkg
          key: |
            vcpkg-${{ runner.os }}-${{ github.job }}-${{ hashFiles(
                '/usr/local/share/vcpkg/**/vcpkg.json',
                '/usr/local/share/vcpkg/**/CONTROL',
                'vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-${{ github.job }}-
            vcpkg-${{ runner.os }}-
      - name: configure
        run: >
          cmake -S . -B ${{runner.workspace}}/build
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: install clang-tidy
        run: sudo apt install clang-tidy-10
      - name: tidy
        run: >
          git ls-files -z |
          grep -zE '\.cc$' |
          xargs --verbose -P 2 -n 1 -0 clang-tidy-10 -p=${{runner.workspace}}/build

  clang-format:
    name: clang-format
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: clang-format
        run: git ls-files -z | grep -zE '\.(cc|h)$' | xargs -P 2 -n 50 -0 clang-format-10 -i
      - name: check-diff
        run: git diff --ignore-submodules=all --color --exit-code .

  cmake-format:
    name: cmake-format
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: install cmake-format
        run: pip install cmakelang==0.6.13
      - name: cmake-format
        run: >
          git ls-files -z | grep -zE '((^|/)CMakeLists\.txt|\.cmake)$' |
          xargs -P 2 -n 1 -0 /home/runner/.local/bin/cmake-format -i
      - name: check-diff
        run: git diff --ignore-submodules=all --color --exit-code .
