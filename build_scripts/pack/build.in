set -eu

echo "---> Functions Framework C++ Buildpack"

layers="$1"

echo "-----> Setup vcpkg"
export VCPKG_DEFAULT_BINARY_CACHE="${layers}/vcpkg-cache"
export VCPKG_DEFAULT_TRIPLET=x64-linux-nodebug
export VCPKG_ROOT="${layers}/vcpkg"

if [[ -d "/usr/local/share/gcf/build_scripts/vcpkg-overlays" ]]; then
  export VCPKG_OVERLAY_PORTS="/usr/local/share/gcf/build_scripts/vcpkg-overlays"
fi

if [[ ! -d "${VCPKG_ROOT}" ]]; then
  echo "-----> Install vcpkg"
  mkdir -p "${VCPKG_ROOT}"
  curl -sSL https://github.com/Microsoft/vcpkg/archive/65e5ea1df685a5362e70367bef4dbf827addff31.tar.gz | \
    tar -C "${VCPKG_ROOT}" -xzf - --strip-components=1
  cat >"${VCPKG_ROOT}/triplets/x64-linux-nodebug.cmake" <<_EOF_
set(VCPKG_BUILD_TYPE release)
set(VCPKG_CMAKE_SYSTEM_NAME Linux)
set(VCPKG_CRT_LINKAGE dynamic)
set(VCPKG_LIBRARY_LINKAGE static)
set(VCPKG_TARGET_ARCHITECTURE x64)
_EOF_
  cp -r /usr/local/bin/vcpkg "${VCPKG_ROOT}"
cat >"${layers}/vcpkg.toml" <<_EOF_
build = true
cache = true
launch = false
_EOF_
fi

if [[ ! -d "${layers}/vcpkg-cache" ]]; then
  echo "-----> Restore cache from build image"
  cp -r /var/cache/vcpkg-cache "${layers}/vcpkg-cache"
cat >"${layers}/vcpkg-cache.toml" <<_EOF_
build = true
cache = true
launch = false
_EOF_
fi

echo "-----> Setup build directory"
cat >"${layers}/source.toml" <<_EOF_
build = true
cache = false
launch = false
_EOF_

cp -r /usr/local/share/gcf/build_scripts/cmake "${layers}/source"
if [[ -r vcpkg.json ]]; then
  cp vcpkg.json "${layers}/source"
else
  cat >"${layers}/source/vcpkg.json" <<_EOF_
{
  "name": "auto-generated-vcpkg-json",
  "version-string": "unversioned",
  "dependencies": [ "functions-framework-cpp" ]
}
_EOF_
fi
/usr/local/share/gcf/build_scripts/generate-wrapper.sh \
    "${TARGET_FUNCTION}" "${FUNCTION_SIGNATURE_TYPE:-http}" >"${layers}/source/main.cc"

echo "-----> Configure Function"
cat >"${layers}/binary.toml" <<_EOF_
build = true
cache = true
launch = false
_EOF_

/usr/local/bin/cmake -S "${layers}/source" -B "${layers}/binary" -GNinja -DCMAKE_MAKE_PROGRAM=/usr/local/bin/ninja \
  -DCNB_APP_DIR="${PWD}" \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX="${layers}/local" \
  -DVCPKG_TARGET_TRIPLET="${VCPKG_DEFAULT_TRIPLET}" \
  -DCMAKE_TOOLCHAIN_FILE="${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
/usr/local/bin/cmake --build "${layers}/binary" --target install

cat >"${layers}/local.toml" <<_EOF_
launch = true
cache = false
build = false
_EOF_

cat >"${layers}/launch.toml" <<_EOF_
[[processes]]
type = "web"
command = "${layers}/local/bin/function"
_EOF_
