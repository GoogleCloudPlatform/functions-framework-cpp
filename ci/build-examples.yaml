# WARNING: DO NOT EDIT THIS FILE
# This file is automatically generated by ci/generate-build-examples.sh
timeout: 3600s
options:
  machineType: 'N1_HIGHCPU_32'
  diskSizeGb: 512

steps:
  # Workaround a kaniko bug using the "edge" builder:
  #     https://github.com/GoogleContainerTools/kaniko/issues/1058
  - name: 'gcr.io/kaniko-project/executor:edge'
    args: [
        "--context=dir:///workspace/build_scripts",
        "--dockerfile=build_scripts/pack.Dockerfile",
        "--destination=gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}",
        "--cache=true",
        "--cache-ttl=48h"
    ]

  # Create the docker images for the buildpacks builder.
  - name: 'gcr.io/kaniko-project/executor:edge'
    args: [
        "--context=dir:///workspace/",
        "--dockerfile=build_scripts/Dockerfile",
        "--destination=gcr.io/${PROJECT_ID}/functions-framework-cpp/runtime:${SHORT_SHA}",
        "--target=gcf-cpp-runtime",
        "--cache=true",
    ]
    waitFor: ['-']
    timeout: 1800s
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull', 'gcr.io/${PROJECT_ID}/functions-framework-cpp/runtime:${SHORT_SHA}']
  - name: 'gcr.io/kaniko-project/executor:edge'
    args: [
        "--context=dir:///workspace/",
        "--dockerfile=build_scripts/Dockerfile",
        "--destination=gcr.io/${PROJECT_ID}/functions-framework-cpp/develop:${SHORT_SHA}",
        "--cache=true",
    ]
    waitFor: ['-']
    timeout: 1800s
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull', 'gcr.io/${PROJECT_ID}/functions-framework-cpp/develop:${SHORT_SHA}']
    # Setup local names for the builder images.
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'gcr.io/${PROJECT_ID}/functions-framework-cpp/develop:${SHORT_SHA}', 'gcf-cpp-develop']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'gcr.io/${PROJECT_ID}/functions-framework-cpp/runtime:${SHORT_SHA}', 'gcf-cpp-runtime']

  # Create the buildpacks builder, and make it the default.
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    args: ['builder', 'create', 'gcf-cpp-builder:bionic', '--config', 'pack/builder.toml', ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    args: ['config', 'trusted-builders', 'add', 'gcf-cpp-builder:bionic', ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    args: ['config', 'default-builder', 'gcf-cpp-builder:bionic', ]
    id: 'gcf-builder-ready'

  # Build the examples using the builder. Keep these in alphabetical order.
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-cloud-event'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=cloudevent',
      '--env', 'TARGET_FUNCTION=HelloCloudEvent',
      '--path', 'examples/hello_cloud_event',
      'hello-cloud-event',
    ]

  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-from-namespace'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=hello_from_namespace::HelloWorld',
      '--path', 'examples/hello_from_namespace',
      'hello-from-namespace',
    ]

  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-from-namespace-rooted'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=::hello_from_namespace::HelloWorld',
      '--path', 'examples/hello_from_namespace',
      'hello-from-namespace-rooted',
    ]

  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-from-nested-namespace'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=hello_from_nested_namespace::ns0::ns1::HelloWorld',
      '--path', 'examples/hello_from_nested_namespace',
      'hello-from-nested-namespace',
    ]

  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-multiple-sources'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=HelloMultipleSources',
      '--path', 'examples/hello_multiple_sources',
      'hello-multiple-sources',
    ]

  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-gcs'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=HelloGcs',
      '--path', 'examples/hello_gcs',
      'hello-gcs',
    ]

  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-with-third-party'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=HelloWithThirdParty',
      '--path', 'examples/hello_with_third_party',
      'hello-with-third-party',
    ]

  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-world'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=HelloWorld',
      '--path', 'examples/hello_world',
      'hello-world',
    ]

  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'hello-world-rooted'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=::HelloWorld',
      '--path', 'examples/hello_world',
      'hello-world-rooted',
    ]

  # Build the cloud site examples.
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-concepts_after_response'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=concepts_after_response',
      '--path', 'examples/site/concepts_after_response',
      'site-concepts_after_response',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-concepts_after_timeout'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=concepts_after_timeout',
      '--path', 'examples/site/concepts_after_timeout',
      'site-concepts_after_timeout',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-concepts_filesystem'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=concepts_filesystem',
      '--path', 'examples/site/concepts_filesystem',
      'site-concepts_filesystem',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-concepts_request'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=concepts_request',
      '--path', 'examples/site/concepts_request',
      'site-concepts_request',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-concepts_stateless'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=concepts_stateless',
      '--path', 'examples/site/concepts_stateless',
      'site-concepts_stateless',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-env_vars'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=env_vars',
      '--path', 'examples/site/env_vars',
      'site-env_vars',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-hello_world_get'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=hello_world_get',
      '--path', 'examples/site/hello_world_get',
      'site-hello_world_get',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-hello_world_http'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=hello_world_http',
      '--path', 'examples/site/hello_world_http',
      'site-hello_world_http',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-hello_world_pubsub'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=cloudevent',
      '--env', 'TARGET_FUNCTION=hello_world_pubsub',
      '--path', 'examples/site/hello_world_pubsub',
      'site-hello_world_pubsub',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-hello_world_storage'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=cloudevent',
      '--env', 'TARGET_FUNCTION=hello_world_storage',
      '--path', 'examples/site/hello_world_storage',
      'site-hello_world_storage',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-http_content'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=http_content',
      '--path', 'examples/site/http_content',
      'site-http_content',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-http_cors'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=http_cors',
      '--path', 'examples/site/http_cors',
      'site-http_cors',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-http_cors_auth'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=http_cors_auth',
      '--path', 'examples/site/http_cors_auth',
      'site-http_cors_auth',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-http_method'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=http_method',
      '--path', 'examples/site/http_method',
      'site-http_method',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-http_xml'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=http_xml',
      '--path', 'examples/site/http_xml',
      'site-http_xml',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-pubsub_subscribe'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=cloudevent',
      '--env', 'TARGET_FUNCTION=pubsub_subscribe',
      '--path', 'examples/site/pubsub_subscribe',
      'site-pubsub_subscribe',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-tips_gcp_apis'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=tips_gcp_apis',
      '--path', 'examples/site/tips_gcp_apis',
      'site-tips_gcp_apis',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-tips_infinite_retries'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=cloudevent',
      '--env', 'TARGET_FUNCTION=tips_infinite_retries',
      '--path', 'examples/site/tips_infinite_retries',
      'site-tips_infinite_retries',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-tips_lazy_globals'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=tips_lazy_globals',
      '--path', 'examples/site/tips_lazy_globals',
      'site-tips_lazy_globals',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-tips_retry'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=cloudevent',
      '--env', 'TARGET_FUNCTION=tips_retry',
      '--path', 'examples/site/tips_retry',
      'site-tips_retry',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-tips_scopes'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=tips_scopes',
      '--path', 'examples/site/tips_scopes',
      'site-tips_scopes',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-tutorial_cloud_bigtable'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=tutorial_cloud_bigtable',
      '--path', 'examples/site/tutorial_cloud_bigtable',
      'site-tutorial_cloud_bigtable',
    ]
  - name: 'gcr.io/${PROJECT_ID}/pack:${SHORT_SHA}'
    waitFor: ['gcf-builder-ready']
    id: 'site-tutorial_cloud_spanner'
    args: ['build',
      '--env', 'FUNCTION_SIGNATURE_TYPE=http',
      '--env', 'TARGET_FUNCTION=tutorial_cloud_spanner',
      '--path', 'examples/site/tutorial_cloud_spanner',
      'site-tutorial_cloud_spanner',
    ]

  # Verify generated images are deployable
  - name: 'gcr.io/cloud-builders/docker'
    waitFor: ['hello-world']
    args: ['tag', 'hello-world', 'gcr.io/${PROJECT_ID}/hello-world-${BUILD_ID}:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/hello-world-${BUILD_ID}:latest']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy',
      'hello-world-${BUILD_ID}',
      '--platform', 'managed',
      '--project', '${PROJECT_ID}',
      '--region', 'us-central1',
      '--image', 'gcr.io/${PROJECT_ID}/hello-world-${BUILD_ID}:latest',
      '--allow-unauthenticated',
    ]
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        URL=$$(gcloud run services list \
            --project=${PROJECT_ID} \
            --platform managed \
            --filter=SERVICE:hello-world-${BUILD_ID} \
            '--format=csv[no-heading](URL)')
        echo "Pinging service at $${URL}"
        curl -sSL --retry 3 "$${URL}"
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'services', 'delete',
      'hello-world-${BUILD_ID}',
      '--platform', 'managed',
      '--project', '${PROJECT_ID}',
      '--region', 'us-central1',
      '--quiet',
    ]
