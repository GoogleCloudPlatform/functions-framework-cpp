#!/bin/bash
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -eu

echo "---> Functions Framework C++ Buildpack"

layers="$1"

echo "-----> Setup vcpkg cache"
export VCPKG_DEFAULT_BINARY_CACHE=${layers}/vcpkg
export VCPKG_OVERLAY_PORTS=/usr/local/share/gcf/vcpkg-overlays
if [[ ! -d "${layers}/vcpkg" ]]; then
  echo "-----> Restore cache from build image"
  cp -r /var/cache/vcpkg-cache "${layers}/vcpkg"
fi
cat > "${layers}/vcpkg.toml" <<EOL
build = true
cache = true
launch = false
EOL

echo "-----> Setup build directory"
cat > "${layers}/source.toml" <<EOL
build = true
cache = false
launch = false
EOL

cp -r /usr/local/share/gcf/cmake "${layers}/source"
if [[ -r vcpkg.json ]]; then
  cp vcpkg.json "${layers}/source"
fi
/usr/local/share/gcf/generate-wrapper.sh "${TARGET_FUNCTION}" "${FUNCTION_SIGNATURE_TYPE:-http}" >"${layers}/source/main.cc"

echo "-----> Configure Function"
cat > "${layers}/binary.toml" <<EOL
build = true
cache = true
launch = false
EOL

/usr/local/bin/cmake -S "${layers}/source" -B "${layers}/binary" -GNinja \
  -DCNB_APP_DIR="${PWD}" \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX="${layers}/local" \
  -DCMAKE_TOOLCHAIN_FILE="/usr/local/vcpkg/scripts/buildsystems/vcpkg.cmake"
echo "-----> Compile and Install Function``"
/usr/local/bin/cmake --build "${layers}/binary" --target install

cat > "${layers}/local.toml" <<EOL
launch = true
cache = false
build = false
EOL

cat > "${layers}/launch.toml" <<EOL
[[processes]]
type = "web"
command = "${layers}/local/bin/function"
EOL
